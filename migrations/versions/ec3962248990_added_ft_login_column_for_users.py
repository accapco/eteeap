"""Added ft_login column for users

Revision ID: ec3962248990
Revises: 47a80973d06c
Create Date: 2024-05-14 20:45:37.008642

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ec3962248990'
down_revision = '47a80973d06c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.TEXT(length=64),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('f_name',
               existing_type=sa.TEXT(length=64),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('m_name',
               existing_type=sa.TEXT(length=64),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('l_name',
               existing_type=sa.TEXT(length=64),
               type_=sa.String(length=64),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(length=64),
               type_=sa.String(length=64),
               existing_nullable=False)
        batch_op.alter_column('user_type',
               existing_type=sa.TEXT(length=10),
               type_=sa.Enum('admin', 'instructor', 'student'),
               existing_nullable=False)
        batch_op.alter_column('ft_login',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=False,
               server_default="1")
        batch_op.drop_constraint('pk_users PRIMARY KEY (id), CONSTRAINT uq_users_username', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_users_username'), ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_users_username'), type_='unique')
        batch_op.create_unique_constraint('pk_users PRIMARY KEY (id), CONSTRAINT uq_users_username', ['username'])
        batch_op.alter_column('ft_login',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('user_type',
               existing_type=sa.Enum('admin', 'instructor', 'student'),
               type_=sa.TEXT(length=10),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(length=64),
               existing_nullable=False)
        batch_op.alter_column('l_name',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(length=64),
               existing_nullable=True)
        batch_op.alter_column('m_name',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(length=64),
               existing_nullable=True)
        batch_op.alter_column('f_name',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(length=64),
               existing_nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(length=64),
               type_=sa.TEXT(length=64),
               existing_nullable=False)

    # ### end Alembic commands ###
